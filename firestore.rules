rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Common functions for rule reuse
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isCurrentUser(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.is_admin == true;
    }
    
    // Base rule - deny all by default
    match /{document=**} {
      allow read, write: if false;
    }
    
    // User profiles - users can only read/write their own profile, admins can read all
    match /users/{userId} {
      allow read: if isCurrentUser(userId) || isAdmin();
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isCurrentUser(userId) || isAdmin();
      allow delete: if isAdmin();
    }
    
    // Token usage - users can only read their own usage, admins can read all
    match /token_usage/{userId} {
      allow read: if isCurrentUser(userId) || isAdmin();
      allow write: if isAdmin();
      
      // Daily usage subcollection
      match /daily/{date} {
        allow read: if isCurrentUser(userId) || isAdmin();
        allow write: if isAdmin();
      }
    }
    
    // Monthly usage - only admins can directly modify, but authenticated users can read
    match /token_usage_monthly/{month} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }
    
    // User memories - users can only read/write their own memories
    match /user_memories/{userId} {
      allow read, write: if isCurrentUser(userId) || isAdmin();
    }
  }
}